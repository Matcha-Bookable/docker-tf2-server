name: Update Runner
on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  check-tf2-build:
    runs-on: self-hosted
    outputs:
      changed: ${{ steps.check.outputs.changed }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup SteamCMD
        uses: CyberAndrii/setup-steamcmd@v1

      - name: Restore previous build ID from cache
        uses: actions/cache/restore@v3
        id: cache
        with:
          path: build-id.txt
          key: tf2-build-${{ github.repository }}

      - name: Check TF2 build and trigger if changed
        id: check
        run: |
          # Get current build ID
          steamcmd +login anonymous +app_info_print 232250 +quit | grep -A 5 '"public"' | grep '"buildid"' | sed 's/.*"buildid"[[:space:]]*"\([^"]*\)".*/\1/' > current.txt
          CURR=$(cat current.txt)
          
          PREV=""
          [ -f "build-id.txt" ] && PREV=$(cat build-id.txt)
          
          if [ "$CURR" != "$PREV" ] && [ -n "$CURR" ]; then
            echo "Build changed! Will trigger Docker build..."
            
            # Save new build ID for next run
            echo "$CURR" > build-id.txt
            echo "changed=true" >> $GITHUB_OUTPUT
            
            echo "Build ID changed to $CURR"
          else
            echo "No new build change detected"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Save build ID to cache
        uses: actions/cache/save@v3
        if: always()
        with:
          path: build-id.txt
          key: tf2-build-${{ github.repository }}-${{ github.run_id }}

  Trigger-Push:
    needs: check-tf2-build
    if: needs.check-tf2-build.outputs.changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker.io/avanavan/docker-tf2-server
            ghcr.io/Matcha-Bookable/docker-tf2-server
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  Dispatch-CompUpdate:
    needs: Trigger-Push
    if: always() && needs.Trigger-Push.result == 'success'
    runs-on: self-hosted
    steps:
      - name: Dispatch CompUpdate to organization repository
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: Matcha-Bookable/matcha-docker-tf2
          event-type: update

  Dispatch-MgeUpdate:
    needs: Trigger-Push
    if: always() && needs.Trigger-Push.result == 'success'
    runs-on: self-hosted
    steps:
      - name: Dispatch MgeUpdate to individual repository
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.AVAN_MGEREPO_PAT }}
          repository: avanavan/docker-tf2mge
          event-type: update

